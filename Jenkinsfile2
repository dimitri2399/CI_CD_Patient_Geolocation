pipeline {
    agent any 
    tools {
        maven 'M2_HOME'
    }
    stages{
        stage('sonarqube scan'){
         agent {docker { image 'maven:3-amazoncorretto-17-debian' }}
           steps{
            withSonarQubeEnv('sonarserver'){ 
             sh 'mvn verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=dimitri2399_week16-code'
            // sh 'mvn sonar:sonar'
           }
          }
        } 
        stage('all maven commands'){
            steps{
                sh 'mvn clean test compile install package'
            }
        }
       stage('upload artifact'){
          steps{
                sh 'curl -uadmin:AP7DYM4ou6knYX5jb6HUcZXHc3L -T \
                   target/bio*.jar \
                   "http://54.88.123.62:8081/artifactory/HealthCareApp/"'
           }
       }
       stage('image build and push'){
        steps {
            sh 'aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 007572960009.dkr.ecr.us-east-1.amazonaws.com'
            sh 'docker build -t geo-app .'
            sh 'docker tag geo-app:latest 007572960009.dkr.ecr.us-east-1.amazonaws.com/geo-app:latest'
            sh 'docker push 007572960009.dkr.ecr.us-east-1.amazonaws.com/geo-app:latest'
        }
       }
        
    }
}
